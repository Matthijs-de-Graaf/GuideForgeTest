name: Backend CI

on:
  push:
    branches: [ "develop", "feature/*" ]
  pull_request:
    branches: [ "develop", "main" ]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        options: >-
          --health-cmd="mysqladmin ping -h db -uroot -p${MYSQL_ROOT_PASSWORD} --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=20

    steps:
      - uses: actions/checkout@v4

      - name: Install MySQL client
        run: sudo apt-get update && sudo apt-get install -y mysql-client

      - name: Wait for MySQL to be ready
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
        run: |
          echo "Wachten tot MySQL reageert..."
          for i in $(seq 1 60); do
            if mysqladmin ping -h db -uroot -p"$MYSQL_ROOT_PASSWORD" --silent; then
              echo "MySQL is klaar."
              exit 0
            fi
            echo "Nog niet gereed ($i/60)..."
            sleep 5
          done
          echo "MySQL kwam niet online binnen de wachttijd."
          exit 1

      - name: Make Maven Wrapper executable
        run: chmod +x ./backend/mvnw

      - name: Run unit tests
        working-directory: ./backend
        run: ./mvnw clean test
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/${{ secrets.MYSQL_DATABASE }}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Europe/Amsterdam
          SPRING_DATASOURCE_USERNAME: ${{ secrets.MYSQL_USER }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}

      - name: OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'backend'
          path: './backend'
          format: 'HTML,JSON'

      - name: Upload Dependency-Check Report
        uses: actions/upload-artifact@v4
        with:
          name: dep-check-report
          path: dependency-check-report.html
